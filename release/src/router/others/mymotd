#!/bin/sh
#
# Supplementary MOTD script with information about the network / router settings
#
# Version 0.5 written by Monter, modified by Shibby
#

PATH=$PATH:/usr/bin

nvram export --dump0 | awk -F = 'BEGIN {RS="\\\000";OFS="=\"";ORS="\"\n"}; /^([lw]an[0-9]?_(ipaddr|netmask)|landevs|router_name|[a-z0-9]+_hwaddr|t_cafree|t_model_name|sshd_motd|dhcpd[0-9]?_(start|end)ip)|wl[0-9]_(ssid|channel|country)/ { tmp=$1; sub(/^[^=]+=+/,""); print tmp,$0 }' > /tmp/.mymotd.$$ && . /tmp/.mymotd.$$
rm -f /tmp/.mymotd.$$

#only if enable
if [ "$sshd_motd" != "1" ]; then
  exit
fi

PROFILE=$1
if [ "$PROFILE" == "init" ]; then
  sed -i "/mymotd/d" /root/.profile
  echo "/usr/sbin/mymotd" >> /root/.profile
  exit
fi

# Function calculates number of bit in a netmask
#
mask2cidr() {
    nbits=0
    IFS=.
    for dec in $1 ; do
        case $dec in
            255) let nbits+=8;;
            254) let nbits+=7;;
            252) let nbits+=6;;
            248) let nbits+=5;;
            240) let nbits+=4;;
            224) let nbits+=3;;
            192) let nbits+=2;;
            128) let nbits+=1;;
            0);;
            *) echo "Error: $dec is not recognised"; exit 1
        esac
    done
    echo "$nbits"
}

DUAL=`echo $landevs | /bin/grep wl1 | wc -l`

WAN_NUMBITS=`mask2cidr $wan_netmask`
LAN_NUMBITS=`mask2cidr $lan_netmask`

echo -e "\033[1;34m ======================================================== \033[0m"
echo -e "\033[1;32m Welcome to the $t_model_name [ $router_name ]\033[0m"
echo -e "\033[1;31m Uptime: `uptime | /bin/sed -e 's/,  load/\n Load/'`\033[0m"
if [ "$t_cafree" == 1 ]; then
  awk '/MemTotal:/{total=$2} \
       /MemFree:/{free=$2} \
       /Buffers:/{buffers=$2} \
       /^Cached:/{cached=$2} \
       END{ \
        printf " Mem usage: %0.1f", ((total-free-buffers-cached)*100/total); printf "%c", 37; \
        printf " (used %0.2f", (total-free-buffers-cached)/1024; printf " of %0.2f", total/1024; printf " MB)\n"; \
      }' /proc/meminfo
  if [ `cat /proc/meminfo | /bin/grep SwapTotal | awk '{ print $2 }'` -gt 0 ]; then
  awk '/SwapTotal:/{stotal=$2} \
       /SwapFree:/{sfree=$2} \
       /SwapCached:/{scached=$2} \
       END{ \
        printf " Swap usage: %0.1f", ((stotal-sfree-scached)*100/stotal); printf "%c", 37; \
        printf " (used %0.2f", (stotal-sfree-scached)/1024; printf " of %0.2f", stotal/1024; printf " MB)\n"; \
       }' /proc/meminfo
  fi
else
  awk '/MemTotal:/{total=$2} \
       /MemFree:/{free=$2} \
       END{ \
        printf " Mem : used %0.1f", ((total-free)*100/total); printf "%c", 37; \
        printf " (%0.2f", (total-free)/1024; printf " of %0.2f", total/1024; printf " MB)\n"; \
      }' /proc/meminfo
  if [ `cat /proc/meminfo | /bin/grep SwapTotal | awk '{ print $2 }'` -gt 0 ]; then
  awk '/SwapTotal:/{stotal=$2} \
       /SwapFree:/{sfree=$2} \
       END{ \
        printf " Swap usage: %0.1f", ((stotal-sfree)*100/stotal); printf "%c", 37; \
        printf " (used %0.2f", (stotal-sfree)/1024; printf " of %0.2f", stotal/1024; printf " MB)\n"; \
       }' /proc/meminfo
  fi
fi
echo " WAN : $wan_ipaddr/$WAN_NUMBITS @ $wan_hwaddr"
echo " LAN : $lan_ipaddr/$LAN_NUMBITS @ DHCP: $dhcpd_startip - $dhcpd_endip"
if [ "$lan1_ipaddr" != "" ]; then 
    LAN1_NUMBITS=`mask2cidr $lan1_netmask`
    echo " LAN1: $lan1_ipaddr/$LAN1_NUMBITS @ DHCP: $dhcpd1_startip - $dhcpd1_endip";
fi
if [ "$lan2_ipaddr" != "" ]; then 
    LAN2_NUMBITS=`mask2cidr $lan2_netmask`
    echo " LAN2: $lan2_ipaddr/$LAN2_NUMBITS @ DHCP: $dhcpd2_startip - $dhcpd2_endip";
fi
if [ "$lan3_ipaddr" != "" ]; then 
    LAN3_NUMBITS=`mask2cidr $lan3_netmask`
    echo " LAN3: $lan3_ipaddr/$LAN3_NUMBITS @ DHCP: $dhcpd3_startip - $dhcpd3_endip";
fi
if [ "$lan4_ipaddr" != "" ]; then 
    LAN4_NUMBITS=`mask2cidr $lan4_netmask`
    echo " LAN4: $lan4_ipaddr/$LAN4_NUMBITS @ DHCP: $dhcpd4_startip - $dhcpd4_endip";
fi
if [ "$lan5_ipaddr" != "" ]; then 
    LAN5_NUMBITS=`mask2cidr $lan5_netmask`
    echo " LAN5: $lan5_ipaddr/$LAN5_NUMBITS @ DHCP: $dhcpd5_startip - $dhcpd5_endip";
fi
if [ "$lan6_ipaddr" != "" ]; then 
    LAN6_NUMBITS=`mask2cidr $lan6_netmask`
    echo " LAN6: $lan6_ipaddr/$LAN6_NUMBITS @ DHCP: $dhcpd6_startip - $dhcpd6_endip";
fi
if [ "$lan7_ipaddr" != "" ]; then 
    LAN7_NUMBITS=`mask2cidr $lan7_netmask`
    echo " LAN7: $lan7_ipaddr/$LAN7_NUMBITS @ DHCP: $dhcpd7_startip - $dhcpd7_endip";
fi
GETCH24=$wl0_channel
if [ "$GETCH24" == 0 ]; then CH24="auto"; else CH24=$GETCH24; fi
echo " WL0 : $wl0_ssid @ channel: $wl0_country$CH24 @ $wl0_hwaddr"
if [ "$DUAL" == "1" ]; then
  GETCH50=$wl1_channel
  if [ "$GETCH50" == 0 ]; then CH50="auto"; else CH50=$GETCH50; fi
  echo " WL1 : $wl1_ssid @ channel: $wl1_country$CH50 @ $wl1_hwaddr"
fi

STHMD_ISENABLED=`/usr/sbin/cru l | /bin/grep "perm_on"`
STHMD_SUNENABLED=`/usr/sbin/cru l | /bin/grep "sun_on"`
STHMD_SCHON=`/usr/sbin/cru l | awk '/stealthscheduleon/ { print $2" "$1 }'`
STHMD_SCHOFF=`/usr/sbin/cru l | awk '/stealthsheduleoff/ { print $2" "$1 }'`

if [ "$STHMD_ISENABLED" != "" -o "$STHMD_SUNENABLED" != "" ]; then
  STHMD_SUNSET=`/usr/sbin/cru l | /bin/grep "stealthsunset" | awk '{ print $2" "$1 }'`
  STHMD_SUNRISE=`/usr/sbin/cru l | /bin/grep "stealthsunrise" | awk '{ print $2" "$1 }'`
  echo " -------------------------------------------------------- "
  if [ $STHMD_ISENABLED -gt 0 ]; then
    echo " Detected the presence of stealthMode which is now active"
  fi
  if [ $STHMD_SUNENABLED -gt 0 ]; then
    echo -e "  stealthMode Sunset mode is currently active and is set\n         for sunset at $( echo $STHMD_SUNSET | awk '{$1=sprintf("%02d", $1);$2=sprintf("%02d", $2); print $1":"$2 }' ) and sunrise at $( echo $STHMD_SUNRISE | awk '{$1=sprintf("%02d", $1);$2=sprintf("%02d", $2); print $1":"$2 }' )"
  fi
fi
if [ "$STHMD_SCHON" != "" -o "$STHMD_SCHOFF" != "" ]; then
    echo -e "  stealthMode Scheduled mode is currently active and is\n       set for sunset at $( echo $STHMD_SCHON | awk '{$1=sprintf("%02d", $1);$2=sprintf("%02d", $2); print $1":"$2 }' ) and sunrise at $( echo $STHMD_SCHOFF | awk '{$1=sprintf("%02d", $1);$2=sprintf("%02d", $2); print $1":"$2 }' )"
fi
echo -e "\033[1;34m ======================================================== \033[0m"
echo ""
